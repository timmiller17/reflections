When would you want to use a remote repository rather than keeping all your work local?

	There are a few obvious reasons.  One, it provides a second location for project safety.  It'd be horrible
	if you lost your local storage and your code.  Two, for me personally, it allows me to work on different computers
	and keep them all in sync with my latest efforts (upstairs, downstairs, laptop on train, etc.).  Three,
	it allows you to collaborate with others which is critical for most serious personal projects and definitely for 
	professional projects.

Why might you want to always pull changes manually rather than having Git 
automatically stay up-to-date with your remote repository?

	Since we are talking about code here, you have to pull in complete logical 
	sets or else you will probably break the code.  Also, obviously, if multiple 
	people are working with the same remote then you don't want to be having 
	their code show up all willy-nilly in yours.  You want to merge at the 
	appropriate times.

Describe the differences between forks, clones, and branches. When would you use 
one instead of another?

	Forks are copies of a repository on GitHub to a new repository on GitHub. 
	They are useful for when you want to change something but keep the original 
	intact (or possibly if you want to change something you don't even have 
	permission to change - like someone else's code).

	Clones are created on your local computer from either a remote repository or 
	a different local repository. They are an entire project.

	Branches can be created within a repository.  You can push or pull a branch 
	between a local and remote repository.  They are used when multiple people 
	are working on the same repository or if you want to try an experimental 
	change.  It is probably common to have a main branch and all development is 
	done in a dev branch where it is acceptable to break things.  Then when the 
	dev branch is deemed ready, it can be merged back into the main branch.

What is the benefit of having a copy of the last known state of the remote 
stored locally?

	This allows you to work offline to do the merge (for example, if you are on 
	a plane).  origin/master is the copy of the remote branch.  master is your 
	local copy.  You can merge the two and then push back to the remote when you
	are ready.  The way to get a local copy without doing a pull is to do a <git 
	fetch origin>.  Then you can do the git merge locally.  A pull does the git 
	fetch and merge in a single step.

How would you collaborate without using Git or GitHub? What would be easier, and 
what would be harder?

	Without using git or github, you could collaborate by emailing each other 
	files.  I'm not sure what would be easier about this.  Perhaps it would 
	remove some small amount of overhead.  However, it would be very hard to 
	track changes, it would be very hard to merge simultaneous changes, etc.

Insert a change just to test credential helper setup.

